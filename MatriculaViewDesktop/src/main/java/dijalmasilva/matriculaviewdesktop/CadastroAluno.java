/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dijalmasilva.matriculaviewdesktop;

import dijalmasilva.matriculacore.entidades.Aluno;
import dijalmasilva.matriculacore.entidades.AlunoBuilder;
import dijalmasilva.matriculaservice.ServiceAluno;
import java.awt.Color;
import java.time.LocalDate;
import java.time.Period;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Dijalma Silva <dijalmacz@gmail.com>
 */
public class CadastroAluno extends javax.swing.JFrame {

    private String nome;
    private boolean testNome;
    private LocalDate dataNascimento;
    private boolean testData;
    private String nacionalidade;
    private String identidade;
    private String orgaoEmissor;
    private boolean testOrgaoEmissor;
    private String cpf;
    private boolean testCpf;
    private String sexo;
    private String reservista;
    private boolean testReservista;

    /**
     * Creates new form CadastroAluno
     */
    public CadastroAluno() throws ClassNotFoundException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException {
        initComponents();
        this.setLocationRelativeTo(null);
        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        this.btSalvar.setEnabled(false);
        textReservista.setEnabled(false);
        textEmissor.setEnabled(false);
        ThreadDisponibilidade thread = new ThreadDisponibilidade(this);
        thread.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textDataNascimento = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        textIdentidade = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        textReservista = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        textCpf = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        textEmissor = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        comboSexo = new javax.swing.JComboBox();
        comboNacionalidade = new javax.swing.JComboBox<String>();
        jLabel11 = new javax.swing.JLabel();
        btSalvar = new javax.swing.JButton();
        btFechar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Matriculas");

        textNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textNomeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textNomeKeyReleased(evt);
            }
        });

        jLabel2.setText("Nome:");

        jLabel3.setText("Data de Nascimento:");

        try {
            textDataNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        textDataNascimento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textDataNascimentoKeyReleased(evt);
            }
        });

        jLabel4.setText("Nacionalidade:");

        jLabel5.setText("Identidade:");

        textIdentidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textIdentidadeKeyReleased(evt);
            }
        });

        jLabel6.setText("Org√£o Emissor:");

        textReservista.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textReservistaKeyReleased(evt);
            }
        });

        jLabel7.setText("CPF:");

        try {
            textCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        textCpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textCpfKeyReleased(evt);
            }
        });

        jLabel8.setText("Reservista:");

        textEmissor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textEmissorKeyReleased(evt);
            }
        });

        jLabel9.setText("Sexo:");

        comboSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MASCULINO", "FEMININO" }));

        comboNacionalidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Argentino", "Boliviano", "Brasileiro", "Chileno", "Colombiano", "Equatoriano", "Paraguaio", "Peruano", "Uruguaio", "Venezuelano" }));
        comboNacionalidade.setSelectedIndex(2);
        comboNacionalidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboNacionalidadeActionPerformed(evt);
            }
        });

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ifpb_menor.png"))); // NOI18N

        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btFechar.setText("Fechar");
        btFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(textIdentidade, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textEmissor, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textReservista, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(27, 27, 27)
                            .addComponent(textNome, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel3)
                        .addComponent(jLabel2)
                        .addComponent(jLabel5)
                        .addComponent(jLabel6)
                        .addComponent(jLabel7)
                        .addComponent(jLabel9)
                        .addComponent(jLabel8)
                        .addComponent(jLabel4))
                    .addComponent(textDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboNacionalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(372, 372, 372))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(9, 9, 9)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(textNome, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboNacionalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textIdentidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textEmissor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textReservista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboNacionalidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboNacionalidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboNacionalidadeActionPerformed

    private void textNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNomeKeyPressed
        // TODO add your handling code here:
//        this.nome = textNome.getText();
//        String[] split = nome.split(" ");
//        if (split.length < 2){
//            textNome.setBorder(BorderFactory.createLineBorder(Color.RED));
//        }else{
//            if (split[0].length() < 3 || split[1].length() < 3){
//                textNome.setBorder(BorderFactory.createLineBorder(Color.RED));
//            }else{
//                textNome.setBorder(BorderFactory.createLineBorder(Color.GREEN));
//            }
//        }
    }//GEN-LAST:event_textNomeKeyPressed

    private void textNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNomeKeyReleased
        // TODO add your handling code here:
        this.nome = textNome.getText();
        String[] split = nome.split(" ");
        if (split.length < 2) {
            textNome.setBorder(BorderFactory.createLineBorder(Color.red, 2));
            testNome = false;
        } else if (split[0].length() < 3 || split[1].length() < 3) {
            textNome.setBorder(BorderFactory.createLineBorder(Color.red, 2));
            testNome = false;
        } else {
            textNome.setBorder(BorderFactory.createLineBorder(Color.LIGHT_GRAY, 2));
            testNome = true;
        }
    }//GEN-LAST:event_textNomeKeyReleased

    private void btFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFecharActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(null, "Deseja realmente fechar o sistema de cadastro?");

        if (confirm == JOptionPane.OK_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_btFecharActionPerformed

    public boolean verificaReservista() {
        try {
            LocalDate hj = LocalDate.now();
            int anoHJ = hj.getYear();
            int idade = anoHJ - dataNascimento.getYear();
            if (hj.getMonthValue() < dataNascimento.getMonthValue()) {
                idade--;
            } else if (hj.getMonthValue() == dataNascimento.getMonthValue()) {
                if (hj.getDayOfMonth() < dataNascimento.getDayOfMonth()) {
                    idade--;
                }
            }
            sexo = comboSexo.getSelectedItem().toString();
            if (idade > 17 && sexo.equals("MASCULINO")) {
                textReservista.setEnabled(true);
                return true;
            } else {
                textReservista.setEnabled(false);
                return false;
            }
        } catch (Exception ex) {
            return false;
        }
    }

    private void textDataNascimentoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textDataNascimentoKeyReleased
        // TODO add your handling code here:
        String data = textDataNascimento.getText();

        String[] split = data.split("/");
        dataNascimento = null;

        try {
            int day = Integer.parseInt(split[0]);
            int month = Integer.parseInt(split[1]);
            int year = Integer.parseInt(split[2]);

            boolean result = true;
            if (month == 02) {
                if (day >= 30) {
                    textDataNascimento.setBorder(BorderFactory.createLineBorder(Color.red, 2));
                    result = false;
                }
            } else if (month > 12) {
                textDataNascimento.setBorder(BorderFactory.createLineBorder(Color.red, 2));
                result = false;
            } else if (day > 31) {
                textDataNascimento.setBorder(BorderFactory.createLineBorder(Color.red, 2));
                result = false;
            }

            if (year < 0001) {
                textDataNascimento.setBorder(BorderFactory.createLineBorder(Color.red, 2));
                result = false;
            }

            if (result) {
                textDataNascimento.setBorder(BorderFactory.createLineBorder(Color.LIGHT_GRAY, 2));
                dataNascimento = LocalDate.of(year, month, day);
                if (LocalDate.now().getDayOfMonth() == dataNascimento.getDayOfMonth() && LocalDate.now().getMonthValue() == dataNascimento.getMonthValue()){
                    JOptionPane.showMessageDialog(null, "Feliz anivers√°rio, Parab√©ns!");
                }
            }

            testData = result;

        } catch (NumberFormatException ex) {

        }
    }//GEN-LAST:event_textDataNascimentoKeyReleased

    private void textEmissorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textEmissorKeyReleased
        // TODO add your handling code here:
        if (textEmissor.getText().isEmpty()) {
            testOrgaoEmissor = false;
            textEmissor.setBorder(BorderFactory.createLineBorder(Color.red, 2));
            orgaoEmissor = "";
        } else {
            testOrgaoEmissor = true;
            textEmissor.setBorder(BorderFactory.createLineBorder(Color.lightGray, 2));
            orgaoEmissor = textEmissor.getText();
        }

    }//GEN-LAST:event_textEmissorKeyReleased

    private void textCpfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textCpfKeyReleased
        // TODO add your handling code here:
        if (textCpf.getText().length() == 14) {
            testCpf = true;
            textCpf.setBorder(BorderFactory.createLineBorder(Color.lightGray, 2));
        } else {
            testCpf = false;
            textCpf.setBorder(BorderFactory.createLineBorder(Color.red, 2));
        }

        cpf = textCpf.getText();
    }//GEN-LAST:event_textCpfKeyReleased

    private void textReservistaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textReservistaKeyReleased
        // TODO add your handling code here:
        if (textReservista.getText().equals("   .   .   -  ")) {
            testReservista = false;
            textReservista.setBorder(BorderFactory.createLineBorder(Color.red, 2));
            reservista = "";
        } else {
            testReservista = true;
            textReservista.setBorder(BorderFactory.createLineBorder(Color.lightGray, 2));
            reservista = textReservista.getText();
        }
    }//GEN-LAST:event_textReservistaKeyReleased

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        // TODO add your handling code here:
        boolean cadastro = verificaBotaoCadastro();

        if (cadastro) {
            nacionalidade = comboNacionalidade.getSelectedItem().toString();
            sexo = comboSexo.getSelectedItem().toString();
            Aluno a = new AlunoBuilder(nome, dataNascimento, cpf, sexo).comIdentidade(identidade, orgaoEmissor)
                    .comNacionalidade(nacionalidade).comReservista(reservista).buildAluno();
            ServiceAluno service = new ServiceAluno();
            String resultSave = service.salvarAluno(a);
            JOptionPane.showMessageDialog(null, resultSave);
            if (resultSave.equals("Aluno cadastrado com sucesso!")){
                textCpf.setText("   .   .   -  ");
                textDataNascimento.setText("");
                textEmissor.setText("");
                textIdentidade.setText("");
                textNome.setText("");
                textReservista.setText("");
            }else{
                resultSave += "\nVerifique se todos os campos dispon√≠veis foram preechindos corretamente!";
            }
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private void textIdentidadeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textIdentidadeKeyReleased
        // TODO add your handling code here:
        identidade = textIdentidade.getText();
    }//GEN-LAST:event_textIdentidadeKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new CadastroAluno().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CadastroAluno.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(CadastroAluno.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(CadastroAluno.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(CadastroAluno.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btFechar;
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox comboNacionalidade;
    private javax.swing.JComboBox comboSexo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JFormattedTextField textCpf;
    private javax.swing.JFormattedTextField textDataNascimento;
    private javax.swing.JTextField textEmissor;
    private javax.swing.JTextField textIdentidade;
    private javax.swing.JTextField textNome;
    private javax.swing.JTextField textReservista;
    // End of variables declaration//GEN-END:variables

    boolean verificaOrgaoEmissor() {
        if (textIdentidade.getText().isEmpty()) {
            textEmissor.setEnabled(false);
            return false;
        } else {
            textEmissor.setEnabled(true);
            return true;
        }
    }

    boolean verificaBotaoCadastro() {
        boolean result = true;

        if (testCpf && testData && testNome) {
            if (verificaOrgaoEmissor()) {
                if (!testOrgaoEmissor) {
                    result = false;
                }
            }

            if (verificaReservista()) {
                if (!testReservista) {
                    result = false;
                }
            }
        } else {
            result = false;
        }

        btSalvar.setEnabled(result);
        return result;
    }
}
